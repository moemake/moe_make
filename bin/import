#!/usr/bin/env node
var config = require('../config');
var fs = require('fs');
var db = require('monk')(config().mongoUrl);
var moes = db.get('moes');
var category = db.get('category');
var session = db.get('session');

var csvPaths = [
  'data/job1.csv',
  'data/job2.csv',
  'data/no_human.csv',
  'data/attr.csv',
  'data/charas.csv',
  'data/tone.csv',
  'data/hair.csv',
  'data/body.csv',
  'data/parts.csv',
  'data/eyes.csv',
  'data/looks.csv',
  'data/cloth.csv',
  'data/option.csv',
  'data/ero.csv',
  'data/gesuero.csv',
];

var categoryId = 1;
var entryId = 1;
var catCompleted = 0;
var subCompleted = 0;
csvPaths.forEach(function(path) {
  console.log(path);
  console.log(categoryId);
  var data = "" + fs.readFileSync(path);
  var array = data.split("\n");
  var categoryName = array.shift();
  category.insert({
    categoryId: categoryId,
    categoryName: categoryName,
    subCategoryCount: array.length,
  }).on('complete', function(err, data){
    catCompleted++;
    if (catCompleted === csvPaths.length) {
      process.emit('category finished');
    }
  });
  array.forEach(function(entry) {
    if (entry === '') return;
    moes.insert({
      categoryId: categoryId,
      categoryName: categoryName,
      entryId: entryId,
      entry: entry,
    }).on('complete', function(err, data){
      subCompleted++;
      if (subCompleted === csvPaths.length) {
        process.emit('subcategory finished');
      }
    });
    entryId++;
  });
  categoryId++;
});

var categoryFinished = false;
process.on('category finished', function(){
  categoryFinished = true;
  if (subCategoryFinished) {
    console.log("FINISHED");
    db.close();
  }
});

var subCategoryFinished = false;
process.on('subcategory finished', function(){
  subCategoryFinished = true;
  if (categoryFinished) {
    console.log("FINISHED");
    db.close();
  }
});

